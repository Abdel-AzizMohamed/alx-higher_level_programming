Usege:
======

>>> fun = __import__("101-lazy_matrix_mul").lazy_matrix_mul
>>> fun([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> fun([[1.5, 2.5], [3.5, 4.5]], [[1.5, 2.5], [3.5, 4.5]])
[[11.0, 15.0], [21.0, 29.0]]

Errors:
=======

Bad matrix a Values:
------------------
>>> fun([["a", 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> fun([[None, 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> fun([[[], 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> fun([[{}, 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> fun([[(), 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

Bad matrix a Values:
------------------
>>> fun([[1, 2], [3, 4]], [["a", 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[None, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[[], 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[{}, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[(), 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

Bad matrix b Values:
------------------
>>> fun([[1, 2], [3, 4]], [["a", 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[None, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[[], 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[{}, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> fun([[1, 2], [3, 4]], [[(), 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

Bad matrix a Struct:
--------------------
>>> fun("a", [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun(True, [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun(2.2, [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun((), [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun({}, [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> fun([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> fun([[1, 2, 3], [4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> fun([1, [3, 4]], [[1, 2], [4, 5]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

Bad matrix b Struct:
--------------------
>>> fun([[1, 2], [3, 4]], "a")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], True)
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], 1)
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], 2.2)
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], ())
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], {})
Traceback (most recent call last):
TypeError: m_b must be a list

>>> fun([[1, 2], [3, 4]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> fun([[1, 2], [3, 4]], [[1, 2, 3], [4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> fun([[1, 2], [3, 4]], [1, [4, 5]])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

Bad Function Struct:
--------------------
>>> fun([[1]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> fun([[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> fun()
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
